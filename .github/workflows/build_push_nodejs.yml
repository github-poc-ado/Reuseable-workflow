name: Node With AKS WorkFlow
on: 
  workflow_call:
    inputs:
      NODE_VERSION:
        type: string 
        description: Node JS Version
        required: true
        default: '14.16'
      NPM_JSON_LOCATION:
        type: string 
        description: npm json file path
        required: true
        default: ''  
      NPM_COMMAND:
        type: string 
        description: npm cmd to execute
        required: false
        default: 'npm run build'   
      APP_NAME:
        type: string 
        description: APP_NAME
        required: false
        default: ''                
      DOCKER_NONPROD_REGISTRY_NAME:
        required: false
        type: string
      DOCKER_PROD_REGISTRY_NAME:
        required: false
        type: string
      DOCKER_FILE_NAME:
        required: false
        type: string 
      DOCKER_FILE_DIR:
        required: false
        type: string            
      advanceSecurityEnabled:
        type: boolean 
        description: GitHub Advanced Security
        default: false      
    secrets:
      CODEQL_TOKEN:
        required: false 
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false
      DOCKER_NONPROD_REGISTRY_NAME:
        required: false
      DOCKER_PROD_REGISTRY_NAME:
        required: false
jobs:
  ci_phase:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ inputs.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}
      - name: NPM Install
        run: npm install ${{ inputs. NPM_JSON_LOCATION }}
      - name: 'Dependency Review'
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate        
      - name: Initialize CodeQL
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/init@v2
      - name: Autobuild
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: github/codeql-action/analyze@v2
      - name: Generate Security Report
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: rsdmike/github-security-report-action@v3.0.4
        with:
          token: ${{ secrets.CODEQL_TOKEN }}  
          sarifReportDir: "../results"
          outputDir: ${{ github.workspace }}
          repository: ${{ github.repository }}
      - name: Upload Security Report
        if: ${{ inputs.advanceSecurityEnabled }}
        uses: actions/upload-artifact@v2
        with:
          name: security-report
          path: '${{ github.workspace }}/*.pdf'
      - name: NonProd- Docker Login (Connect to Azure Container registry (ACR))
        if: ${{ inputs.DOCKER_NONPROD_REGISTRY_NAME }}
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.DOCKER_NONPROD_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: NonProd-Container build and push to a Azure Container registry (ACR)
        if: ${{ inputs.DOCKER_NONPROD_REGISTRY_NAME }}
        run: |
          docker build . -t ${{ secrets.DOCKER_NONPROD_REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:$GITHUB_RUN_ID
          docker push ${{ secrets.DOCKER_NONPROD_REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:$GITHUB_RUN_ID
      - name: Prod-Docker Login (Connect to Azure Container registry (ACR))
        if: ${{ inputs.DOCKER_PROD_REGISTRY_NAME }}
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.DOCKER_PROD_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prod-Container build and push to a Azure Container registry (ACR)
        if: ${{ inputs.DOCKER_PROD_REGISTRY_NAME }}
        run: |
          docker build . -t ${{ secrets.DOCKER_PROD_REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:$GITHUB_RUN_ID
          docker push ${{ secrets.DOCKER_PROD_REGISTRY_NAME }}.azurecr.io/${{ inputs.APP_NAME }}:$GITHUB_RUN_ID 
#      - name: Upload artifact
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: node-app
#          path: '${{ github.workspace }}/dist/*.*
      

       
